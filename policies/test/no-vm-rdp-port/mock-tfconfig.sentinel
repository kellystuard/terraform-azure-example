import "strings"
import "types"

_modules = {
	"root": {
		"data":    {},
		"modules": {},
		"outputs": {},
		"providers": {
			"azurerm": {
				"alias": {
					"": {
						"config":     {},
						"references": {},
						"version":    "=1.36.0",
					},
				},
				"config":     {},
				"references": {},
				"version":    "=1.36.0",
			},
		},
		"resources": {
			"azurerm_lb": {
				"test": {
					"config": {
						"name": "TestLoadBalancer",
					},
					"provisioners": null,
					"references": {
						"location": [
							"azurerm_resource_group.main",
						],
						"name": [],
						"resource_group_name": [
							"azurerm_resource_group.main",
						],
					},
				},
			},
			"azurerm_network_security_group": {
				"internal": {
					"config": {
						"name": "InternalSecurityGroup",
					},
					"provisioners": null,
					"references": {
						"location": [
							"azurerm_resource_group.main",
						],
						"name": [],
						"resource_group_name": [
							"azurerm_resource_group.main",
						],
					},
				},
			},
			"azurerm_resource_group": {
				"main": {
					"config": {
						"name": "terraform-azure-example",
					},
					"provisioners": null,
					"references": {
						"location": [
							"var.location",
						],
						"name": [],
					},
				},
			},
			"azurerm_subnet": {
				"internal": {
					"config": {
						"address_prefix": "10.0.2.0/24",
						"name":           "internal",
					},
					"provisioners": null,
					"references": {
						"address_prefix": [],
						"name":           [],
						"network_security_group_id": [
							"azurerm_network_security_group.internal",
						],
						"resource_group_name": [
							"azurerm_resource_group.main",
						],
						"virtual_network_name": [
							"azurerm_virtual_network.main",
						],
					},
				},
			},
			"azurerm_subnet_network_security_group_association": {
				"internal": {
					"config":       {},
					"provisioners": null,
					"references": {
						"network_security_group_id": [
							"azurerm_network_security_group.internal",
						],
						"subnet_id": [
							"azurerm_subnet.internal",
						],
					},
				},
			},
			"azurerm_virtual_network": {
				"main": {
					"config": {
						"address_space": [
							"10.0.0.0/16",
						],
						"name": "main-network",
					},
					"provisioners": null,
					"references": {
						"address_space": [],
						"location": [
							"azurerm_resource_group.main",
						],
						"name": [],
						"resource_group_name": [
							"azurerm_resource_group.main",
						],
					},
				},
			},
		},
		"variables": {
			"location": {
				"default":     "North Central US",
				"description": "",
			},
		},
	},
}

module_paths = [
	[],
]

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
modules = _modules.root.modules
providers = _modules.root.providers
resources = _modules.root.resources
variables = _modules.root.variables
outputs = _modules.root.outputs