import "strings"
import "types"

outputs = {}

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"azurerm_lb": {
				"test": {
					0: {
						"attr": {
							"frontend_ip_configuration": [],
							"id":                   "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/loadBalancers/TestLoadBalancer",
							"location":             "northcentralus",
							"name":                 "TestLoadBalancer",
							"private_ip_address":   "",
							"private_ip_addresses": [],
							"resource_group_name":  "terraform-azure-example",
							"sku":  "Basic",
							"tags": {},
						},
						"depends_on": [
							"azurerm_resource_group.main",
						],
						"id":      "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/loadBalancers/TestLoadBalancer",
						"tainted": false,
					},
				},
			},
			"azurerm_network_security_group": {
				"internal": {
					0: {
						"attr": {
							"id":                  "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/networkSecurityGroups/InternalSecurityGroup",
							"location":            "northcentralus",
							"name":                "InternalSecurityGroup",
							"resource_group_name": "terraform-azure-example",
							"security_rule": [
								{
									"access":                                     "Deny",
									"description":                                "",
									"destination_address_prefix":                 "*",
									"destination_address_prefixes":               [],
									"destination_application_security_group_ids": [],
									"destination_port_range":                     "3899",
									"destination_port_ranges":                    [],
									"direction":                                  "Inbound",
									"name":                                       "testRDP",
									"priority":                                   100,
									"protocol":                                   "Tcp",
									"source_address_prefix":                      "*",
									"source_address_prefixes":                    [],
									"source_application_security_group_ids":      [],
									"source_port_range":                          "*",
									"source_port_ranges":                         [],
								},
							],
							"tags": {},
						},
						"depends_on": [
							"azurerm_resource_group.main",
						],
						"id":      "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/networkSecurityGroups/InternalSecurityGroup",
						"tainted": false,
					},
				},
			},
			"azurerm_resource_group": {
				"main": {
					0: {
						"attr": {
							"id":       "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example",
							"location": "northcentralus",
							"name":     "terraform-azure-example",
							"tags":     {},
						},
						"depends_on": [],
						"id":         "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example",
						"tainted":    false,
					},
				},
			},
			"azurerm_subnet": {
				"internal": {
					0: {
						"attr": {
							"address_prefix":    "10.0.2.0/24",
							"delegation":        [],
							"id":                "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/virtualNetworks/main-network/subnets/internal",
							"ip_configurations": [],
							"name":              "internal",
							"network_security_group_id": "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/networkSecurityGroups/InternalSecurityGroup",
							"resource_group_name":       "terraform-azure-example",
							"route_table_id":            "",
							"service_endpoints":         [],
							"virtual_network_name":      "main-network",
						},
						"depends_on": [
							"azurerm_resource_group.main",
							"azurerm_virtual_network.main",
						],
						"id":      "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/virtualNetworks/main-network/subnets/internal",
						"tainted": false,
					},
				},
			},
			"azurerm_subnet_network_security_group_association": {
				"internal": {
					0: {
						"attr": {
							"id": "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/virtualNetworks/main-network/subnets/internal",
							"network_security_group_id": "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/networkSecurityGroups/InternalSecurityGroup",
							"subnet_id":                 "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/virtualNetworks/main-network/subnets/internal",
						},
						"depends_on": [
							"azurerm_network_security_group.internal",
							"azurerm_subnet.internal",
						],
						"id":      "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/virtualNetworks/main-network/subnets/internal",
						"tainted": false,
					},
				},
			},
			"azurerm_virtual_network": {
				"main": {
					0: {
						"attr": {
							"address_space": [
								"10.0.0.0/16",
							],
							"ddos_protection_plan": [],
							"dns_servers":          [],
							"id":                   "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/virtualNetworks/main-network",
							"location":             "northcentralus",
							"name":                 "main-network",
							"resource_group_name":  "terraform-azure-example",
							"subnet": [
								{
									"address_prefix": "10.0.2.0/24",
									"id":             "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/virtualNetworks/main-network/subnets/internal",
									"name":           "internal",
									"security_group": "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/networkSecurityGroups/InternalSecurityGroup",
								},
							],
							"tags": {},
						},
						"depends_on": [
							"azurerm_resource_group.main",
						],
						"id":      "/subscriptions/9aa6ae03-466d-4162-8457-9687a997befe/resourceGroups/terraform-azure-example/providers/Microsoft.Network/virtualNetworks/main-network",
						"tainted": false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "0.12.13"

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources